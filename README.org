#+TITLE: Ant tasks for Git using JGit

* Summary
This is a set of basic [[http://ant.apache.org/][Apache Ant]] tasks for [[http://git-scm.com/][Git]] to automate GitHub/Maven processes.

This set of Ant tasks is currently used by the [[https://github.com/rimerosolutions/ant-wrapper][Ant Command Line Wrapper]] project.

Below is the current workflow:

: ant release-prepare-[fix|feature|major] (increment version number)
: ant maven-publish-local (local testing -> build, publish to local maven repo)
: ant maven-publish-remote (build, commit and tag, push to remote maven repo)

* Why this project
For *reusable* Apache Ant projects that use Git for version control, the release process is more or less the same:

- Write code on a dedicated branch or in the trunk or elsewhere.
- Make sure that the Git tree is up to date.
- Get ready for a release and increment the release number according to some conventions.
- Commit the changes to the local repository, only files affected by the version number change.
- Tag and push to the remote repository origin.
- Publish the build artifacts to a Maven/Ivy repository, or some shared repository of some kind.
- Do other things such as sending an announcement email.

* No full set of Ant tasks for Git available
It looks like the JGit Eclipse project [[http://wiki.eclipse.org/JGit/User_Guide#Ant_Tasks][is not going to provide a full ready to use set of Apache Ant tasks anytime soon]].

Luckily the JGit API can be wrapped without much pain.
