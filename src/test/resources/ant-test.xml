<project basedir="../../../" xmlns:au="antlib:org.apache.ant.antunit" xmlns:git="antlib:com.rimerosolutions.ant.git" xmlns="antlib:org.apache.tools.ant">
        <taskdef uri="antlib:com.rimerosolutions.ant.git" resource="com/rimerosolutions/ant/git/jgit-ant-lib.xml">
                <classpath>
                        <path refid="compile.classpath" />
                        <path refid="classes.location" />
                </classpath>
        </taskdef>

        <pathconvert property="testData.folder" refid="testData.location"/>
        <property name="testLocalRepo" value="${testData.folder}/testLocalRepo" />
        <property name="testLocalRepoClone" value="${testData.folder}/testLocalRepoClone" />

        <!-- is called prior to the test -->
        <target name="setUp">
                <mkdir dir="${testLocalRepo}" />
                <mkdir dir="${testLocalRepoClone}" />
        </target>

        <!-- is called after the test, even if that caused an error -->
        <target name="tearDown">
                <delete dir="${testLocalRepo}" quiet="true" />
                <delete dir="${testLocalRepoClone}" quiet="true"/>
        </target>

        <macrodef name="initLocalRepo">
                <sequential>
                        <git:settings refId="git.testing"
                                      username="xxxtesting"
                                      password="xxxtesting"
                                      name="xxxtesting"
                                      email="xxxtesting@gmail.com" />
                        <git:git localDirectory="${testLocalRepo}" settingsRef="git.testing">
                                <git:init directory="${testLocalRepo}" bare="false" />
                                <git:commit message="Initial commit"/>
                        </git:git>
                </sequential>
        </macrodef>

        <target name="initLocalRepo">

        </target>

        <target name="testClone" description="Test repository clone">
                <initLocalRepo/>

                <git:git localDirectory="${testLocalRepoClone}" verbose="true">
                        <git:clone uri="file://${testLocalRepo}/.git" directory="${testLocalRepoClone}" />
                </git:git>
                
                <au:assertFileExists file="${testLocalRepoClone}/.git/index" />
        </target>

        <target name="testUpToDateFailure" description="Test clean status failure">
                <initLocalRepo/>

                <au:expectfailure>
                        <git:git localDirectory="${testLocalRepo}" settingsRef="git.testing">
                                <echo file="${testLocalRepo}/test.txt">test</echo>
                                <git:uptodate failOnError="true" />
                        </git:git>
                </au:expectfailure>
        </target>

        <target name="testInit" depends="initLocalRepo" description="Tests git-init">
                <initLocalRepo/>
                
                <au:assertFileExists file="${testLocalRepo}/.git/index" />
        </target>
</project>
